service: myService # TODO: update this with your service name

plugins:
  - serverless-python-requirements

provider:
  name: aws
  runtime: python3.7
  stage: dev
  region: us-east-1
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

functions:
  create:
    handler: notes/create.create
    events:
      - http:
          path: notes
          method: post
          cors: true
          authorizer:
            name: authorizer
            arn: arn:aws:cognito-idp:us-east-1:701759196663:userpool/us-east-1_O8iAg7qoJ

  list:
    handler: notes/list.list
    events:
      - http:
          path: notes
          method: get
          cors: true

  get:
    handler: notes/get.get
    events:
      - http:
          path: notes/{id}
          method: get
          cors: true

resources:
  Resources:
    NotesDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
          - AttributeName: noteId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
          - AttributeName: noteId
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
